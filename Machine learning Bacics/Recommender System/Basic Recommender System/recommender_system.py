# -*- coding: utf-8 -*-
"""Recommender System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E3X41baD__77y4vOcKDznP9q3DJpN9nj
"""

import pandas as  pd
import numpy as np

col_names=["user_id","item_id","rating","timestamp"]

from google.colab import files
files.upload()

df=pd.read_csv("u.data",sep="\t",names=col_names)

df.head()

movies=pd.read_csv("Movie_Id_Titles")

movies.head()

df=pd.merge(df,movies,on="item_id")

df.head()

df.groupby("title")["rating"].mean().sort_values(ascending=False)

df.groupby("title")["rating"].count().sort_values(ascending=False)

ratings=pd.DataFrame(df.groupby("title")["rating"].mean())

ratings.head()

ratings["no.of.ratings"]=pd.DataFrame(df.groupby("title")["rating"].count())

ratings.head()

ratings["no.of.ratings"].hist(bins=80)

ratings["rating"].hist(bins=80)

# Commented out IPython magic to ensure Python compatibility.
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

sns.jointplot(x="rating",y="no.of.ratings",data=ratings,alpha=0.5)

moviematrix=df.pivot_table(index="user_id",columns="title",values="rating")

moviematrix.head()

ratings.sort_values("no.of.ratings",ascending=False).head(10)

starwar_user_ratings=moviematrix["Star Wars (1977)"]
liarliar_user_ratings=moviematrix["Liar Liar (1997)"]

starwar_user_ratings.head()

similar_to_sw=moviematrix.corrwith(starwar_user_ratings)

similar_to_li=moviematrix.corrwith(liarliar_user_ratings)

similar_to_li

similar_to_sw

corr_starwars=pd.DataFrame(similar_to_sw,columns=["Correlation"])

corr_starwars.dropna(inplace=True)

corr_starwars=corr_starwars.join(ratings["no.of.ratings"])

corr_starwars

corr_starwars[corr_starwars["no.of.ratings"]>100].sort_values("Correlation",ascending=False).head()

corr_liarliar=pd.DataFrame(similar_to_li,columns=["Correlation"])

corr_liarliar.dropna(inplace=True)

corr_liarliar=corr_liarliar.join(ratings["no.of.ratings"])

corr_liarliar

corr_liarliar[corr_liarliar["no.of.ratings"]>100].sort_values("Correlation",ascending=False).head()

