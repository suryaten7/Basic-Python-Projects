# -*- coding: utf-8 -*-
"""Linear Regression with python example.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16_vRadQWeLa9mIhBMW-GpevemQUE1A3g
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

from google.colab import files

uploaded = files.upload()

df=pd.read_csv("USA_Housing.csv")

df.head()

df.info()

df.describe()

df.columns

#using some visualization 
sns.pairplot(df)

sns.distplot(df["Price"])

sns.heatmap(df.corr(),annot=True)

#data
X=df[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',
       'Avg. Area Number of Bedrooms', 'Area Population']]

y=df["Price"]

from sklearn.model_selection import train_test_split

#training data
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.4,random_state=100)

#importing LR model
from sklearn.linear_model import LinearRegression

lm=LinearRegression()

lm.fit(X_train,y_train)

#prediction
predictions=lm.predict(X_test)

#some visualize
plt.scatter(y_test,predictions)

#regression Evaluation methods
from sklearn import metrics

metrics.mean_absolute_error(y_test,predictions)

metrics.mean_squared_error(y_test,predictions)

np.sqrt(metrics.mean_squared_error(y_test,predictions))

