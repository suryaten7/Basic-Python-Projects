# -*- coding: utf-8 -*-
"""boston housing linear regression .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YH30j7YeS7uPy1EN6hrcpOd99lBKBGGv
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.datasets import load_boston

boston=load_boston()

print(boston.DESCR)

boston.feature_names

boston.filename

df=pd.read_csv("/usr/local/lib/python3.6/dist-packages/sklearn/datasets/data/boston_house_prices.csv",header=1)

df.head()

sns.distplot(df["MEDV"])

sns.pairplot(df)

X=df[['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD',
       'TAX', 'PTRATIO', 'B', 'LSTAT']]

y=df["MEDV"]

from sklearn.model_selection import train_test_split

#training data
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=100)

#importing LR model
from sklearn.linear_model import LinearRegression

lm=LinearRegression()

lm.fit(X_train,y_train)

#prediction
predictions=lm.predict(X_test)

#some visualize
plt.scatter(y_test,predictions)

#regression Evaluation methods
from sklearn import metrics

metrics.mean_absolute_error(y_test,predictions)

metrics.mean_squared_error(y_test,predictions)

np.sqrt(metrics.mean_squared_error(y_test,predictions))

sns.distplot((y_test-predictions))

lm.score(X,y)

lm.coef_

lm.intercept_

X_train.columns

cdf=pd.DataFrame(lm.coef_,X.columns,columns=["coeff"])

cdf

